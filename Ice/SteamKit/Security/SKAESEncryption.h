//
//  SKAESEncryption.h
//  Ice
//
//  Created by Antwan van Houdt on 24/09/14.
//  Copyright (c) 2014 Exurion. All rights reserved.
//

#import <Foundation/Foundation.h>

@interface SKAESEncryption : NSObject

/**
 * Generates a NSData object of given length with randomly generated bytes
 * Useful lfor sessionkey and IV generation
 * uses arc4random_uniform internally ( per byte )
 *
 * @return NSData		random NSData object of given length
 */
+ (NSData *)generateRandomData:(NSUInteger)length;

/**
 * Encrypts the given packetData using the sessionKey you provide
 * choses a random IV and encrypts it, attaches it to the final data packaoge
 *
 * @param NSData packetData		the raw packet data ( without header ) to encrypt
 * @param NSData key			the session key to use
 *
 * @return NSData				the encrypted data or nil on error
 */
+ (NSData *)encryptPacketData:(NSData *)packetData key:(NSData *)key;

/**
 * Decrypts the given packet data using AES/CBC/PKCS7 Symmetric decryption
 * The key you provide is the sessionKey, packetData shouldl contain the encrypted
 * IV, the method willl strip and decrypt it by itsellf.
 *
 * @param NSData packetData		data to decrypt
 * @param NSData key			the session key to use for the decryption
 *
 * @return NSData				the decrypted data or nil on error
 */
+ (NSData *)decryptPacketData:(NSData *)packetData key:(NSData *)key;

@end
